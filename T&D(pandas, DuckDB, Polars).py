# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nMucYEuvbf4ErF6vFger02kIT248XTr0

Instalando blibiotecas
"""

import tracemalloc
import time
import polars as pl
import duckdb
import pandas as pd
import matplotlib.pyplot as plt

"""Polars"""

tracemalloc.start()
start_time = time.time()

df = pl.read_csv('/content/yellow_tripdata_2019-01.csv')


df = df.with_columns(
    pl.col("tpep_pickup_datetime").str.to_datetime("%Y-%m-%d %H:%M:%S")
)

df_filter = df.filter(pl.col('tip_amount') > 0)

df_hour = df_filter.with_columns(
    pl.col("tpep_pickup_datetime")
      .dt.strftime("%H:%M:%S")
      .alias("hour")
)

media_hours = df_hour.group_by('hour').agg(
    pl.col('tip_amount').mean().alias('media_tip_amount_for_hour')
).sort('hour')

display(media_hours)

end_time = time.time()
current, peak = tracemalloc.get_traced_memory()
tracemalloc.stop()

tempo_execucao_pl = end_time - start_time
memoria_usada_pl = current / 10**6

print(f"Tempo de execução: {tempo_execucao_pl:.4f} segundos")
print(f"Memória usada: {memoria_usada_pl:.4f} MB")

"""DuckDB"""

tracemalloc.start()
start_time = time.time()

con = duckdb.connect()

df2 = con.execute("""
 SELECT tpep_pickup_datetime, tip_amount FROM read_csv_auto('/content/yellow_tripdata_2019-01.csv', ignore_errors=true)
""").fetch_df()

df2['hour'] = df['tpep_pickup_datetime'].dt.strftime('%H:%M:%S')

media_hours = df2[df2['tip_amount'] > 0].groupby('hour')['tip_amount'].mean().reset_index().rename(columns={'tip_amount': 'media_tip_amount_for_hour'})
media_hours = media_hours.sort_values('hour')

display(media_hours)

end_time = time.time()
current, peak = tracemalloc.get_traced_memory()
tracemalloc.stop()

tempo_execucao_dk = end_time - start_time
memoria_usada_dk = current / 10**6

print(f"Tempo de execução: {tempo_execucao_dk:.4f} segundos")
print(f"Memória usada: {memoria_usada_dk:.4f} MB")

"""Pandas"""

tracemalloc.start()
start_time = time.time()

df3 = pd.read_csv('/content/yellow_tripdata_2019-01.csv')

df3['tpep_pickup_datetime'] = pd.to_datetime(df3['tpep_pickup_datetime'], errors='coerce')

df3_filter = df3[df3['tip_amount'] > 0]

df3_filter['hour'] = df3_filter['tpep_pickup_datetime'].dt.strftime('%H:%M:%S')

media_hours = (df3_filter.groupby('hour')['tip_amount'].mean().reset_index().rename(columns={'tip_amount': 'media_tip_amount'}))

display(media_hours)


end_time = time.time()
current, peak = tracemalloc.get_traced_memory()
tracemalloc.stop()

tempo_execucao_pd = end_time - start_time
memoria_usada_pd = current / 10**6

print(f"Tempo de execução: {tempo_execucao_pd:.4f} segundos")
print(f"Memória usada: {memoria_usada_pd:.4f} MB")

"""grafico comparando"""

bib = ['Polars', 'DuckDB', 'Pandas']

memory = [memoria_usada_pl, memoria_usada_dk, memoria_usada_pd]

plt.figure(figsize=(10, 7))
plt.bar(bib, memory)
plt.title('tempo de execução')
plt.ylabel('segundos')
plt.show()

